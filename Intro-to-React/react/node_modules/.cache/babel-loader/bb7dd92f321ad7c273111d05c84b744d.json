{"ast":null,"code":"var _jsxFileName = \"/Users/KarlaMartinez/Desktop/LambdaFolder/Intro-to-React/Intro-to-React/react/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Character from './components/Character';\n\nconst App = () => {\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const handleChange = e => {\n    setSearchTermn(e.target.value);\n    console.log(searchTerm);\n  }; // Fetch characters from the API in an effect hook. Remember, anytime you have a \n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n\n\n  useEffect(() => {\n    axios.get(\"https://rickandmortyapi.com/api/character\").then(res => {\n      // console.log(res.data.results)\n      setData(res.data.results);\n    });\n  }, []);\n  console.log(data);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"Header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Characters\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Search for a character here: \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"search\",\n    value: searchTerm,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(Character, {\n    characterArray: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/KarlaMartinez/Desktop/LambdaFolder/Intro-to-React/Intro-to-React/react/src/App.js"],"names":["React","useState","useEffect","axios","Character","App","data","setData","searchTerm","setSearchTerm","handleChange","e","setSearchTermn","target","value","console","log","get","then","res","results"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA;AACF,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMS,YAAY,GAAGC,CAAC,IAAI;AACxBC,IAAAA,cAAc,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACD,GAHD,CANkB,CAUhB;AAEA;AACA;;;AACFN,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACJc,GADD,CACK,2CADL,EAECC,IAFD,CAEMC,GAAG,IAAI;AACX;AACAZ,MAAAA,OAAO,CAACY,GAAG,CAACb,IAAJ,CAASc,OAAV,CAAP;AACD,KALD;AAMD,GAPQ,EAON,EAPM,CAAT;AAQAL,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAC+B;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,KAAK,EAAEE,UAAxC;AAAoD,IAAA,QAAQ,EAAEE,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/B,CAFF,eAKE,oBAAC,SAAD;AAAW,IAAA,cAAc,EAAIJ,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAjCD;;AAmCA,eAAeD,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport Character from './components/Character'\n\nconst App = () => {\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\nconst [data, setData] = useState([])\nconst [searchTerm, setSearchTerm] = useState(\"\")\n\nconst handleChange = e => {\n  setSearchTermn(e.target.value)\n  console.log(searchTerm)\n}\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a \n\n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\nuseEffect(() => {\n  axios\n  .get(\"https://rickandmortyapi.com/api/character\")\n  .then(res => {\n    // console.log(res.data.results)\n    setData(res.data.results)\n  })\n}, [])\nconsole.log(data)\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"Header\">Characters</h1>\n      <label>\n        Search for a character here: <input type=\"text\" name=\"search\" value={searchTerm} onChange={handleChange}/>\n      </label>\n      <Character characterArray = {data}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}